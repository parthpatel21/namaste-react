1. How do you create Nested Routes react-router-dom configuration
- We Can use the 'children' properties of creatBrowserRouter
- const appRouter = createBrowserRouter([
  {
    path: "/",
    element: <AppLayout />,
    errorElement: <Error />,
    children: [
      { path: "/", element: <Body /> },
      {
        path: "/about",
        element: <About />,
        children: [{ path: "profile", element: <Profile /> }],
      },
      { path: "/contact", element: <Contact /> },
      {
        path: "/restaurant/:id",
        element: <RestaurantMenu />,
      },
    ],
  },
]);

2. Read about createHashRouter and createMemoryRouter from React Router docs.
3. What is the order of life cycle method calls in Class Based Components
- constructor->render()->componentDidMount()
- If we update the state or get new props then render()->componentDidUpdate()
- If we go to another component then componentWillUnmount() will be called

4. Why do we use componentDidMount? 
- To handle side-effects like API and it will get executed after render()

5. Why do we use componentWillUnmount? Show with example
- To handle clean-up or free the variable when a component is no longer in use.

6. Why do we use super(props) in constructor?
- It(super) allows us to call the constructor of the Parent component and by passing props to it we will get most of the functionality that the parent has by accessing the 'this' keyword 

7. Why can't we have the callback function of useEffect async?
- Because the async function implicitly returns a promise and useEffect expects its callback to return nothing or a clean-up function